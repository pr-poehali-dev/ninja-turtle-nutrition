import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

interface Recipe {
  id: number;
  name: string;
  calories: number;
  protein: number;
  carbs: number;
  fat: number;
  cookTime: string;
  category: string;
  ingredients: string[];
  instructions: string[];
}

const sampleRecipes: Recipe[] = [
  {
    id: 1,
    name: "–°—É–ø–µ—Ä–≥–µ—Ä–æ–π—Å–∫–∏–π —Å–º—É–∑–∏",
    calories: 250,
    protein: 15,
    carbs: 35,
    fat: 8,
    cookTime: "5 –º–∏–Ω",
    category: "–ó–∞–≤—Ç—Ä–∞–∫",
    ingredients: ["–ë–∞–Ω–∞–Ω", "–®–ø–∏–Ω–∞—Ç", "–ü—Ä–æ—Ç–µ–∏–Ω", "–ú–∏–Ω–¥–∞–ª—å–Ω–æ–µ –º–æ–ª–æ–∫–æ", "–Ø–≥–æ–¥—ã"],
    instructions: ["–°–º–µ—à–∞—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "–í–∑–±–∏—Ç—å –≤ –±–ª–µ–Ω–¥–µ—Ä–µ", "–ü–æ–¥–∞–≤–∞—Ç—å —Ö–æ–ª–æ–¥–Ω—ã–º"]
  },
  {
    id: 2,
    name: "–ß–µ—Ä–µ–ø–∞—à–∫–∞ –ø–∏—Ü—Ü–∞",
    calories: 320,
    protein: 18,
    carbs: 28,
    fat: 12,
    cookTime: "25 –º–∏–Ω",
    category: "–û–±–µ–¥",
    ingredients: ["–¶–µ–ª—å–Ω–æ–∑–µ—Ä–Ω–æ–≤–∞—è –æ—Å–Ω–æ–≤–∞", "–¢–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å", "–ú–æ—Ü–∞—Ä–µ–ª–ª–∞", "–û–≤–æ—â–∏", "–ë–∞–∑–∏–ª–∏–∫"],
    instructions: ["–†–∞—Å–∫–∞—Ç–∞—Ç—å —Ç–µ—Å—Ç–æ", "–î–æ–±–∞–≤–∏—Ç—å —Å–æ—É—Å –∏ —Ç–æ–ø–ø–∏–Ω–≥–∏", "–ó–∞–ø–µ—á—å 15 –º–∏–Ω—É—Ç"]
  },
  {
    id: 3,
    name: "–ù–∏–Ω–¥–∑—è —Å–∞–ª–∞—Ç",
    calories: 180,
    protein: 12,
    carbs: 15,
    fat: 9,
    cookTime: "10 –º–∏–Ω",
    category: "–£–∂–∏–Ω",
    ingredients: ["–ú–∏–∫—Å —Å–∞–ª–∞—Ç–æ–≤", "–ê–≤–æ–∫–∞–¥–æ", "–°–µ–º–µ—á–∫–∏", "–û–ª–∏–≤–∫–æ–≤–æ–µ –º–∞—Å–ª–æ", "–õ–∏–º–æ–Ω"],
    instructions: ["–ù–∞—Ä–µ–∑–∞—Ç—å –æ–≤–æ—â–∏", "–°–º–µ—à–∞—Ç—å –∑–∞–ø—Ä–∞–≤–∫—É", "–ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤—Å–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"]
  }
];

function Index() {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('–í—Å–µ');
  const [selectedRecipe, setSelectedRecipe] = useState<Recipe | null>(null);

  const categories = ['–í—Å–µ', '–ó–∞–≤—Ç—Ä–∞–∫', '–û–±–µ–¥', '–£–∂–∏–Ω', '–ü–µ—Ä–µ–∫—É—Å'];
  
  const filteredRecipes = sampleRecipes.filter(recipe => {
    const matchesSearch = recipe.name.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === '–í—Å–µ' || recipe.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  return (
    <div className="min-h-screen bg-gradient-to-br from-turtle-green/10 to-turtle-orange/10">
      {/* Header */}
      <header className="bg-turtle-green comic-border shadow-lg mb-8">
        <div className="container mx-auto px-4 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="text-4xl font-black text-white comic-text-shadow">
                NINJA NUTRITION
              </div>
              <div className="text-xl text-turtle-yellow">ü•∑ü•ó</div>
            </div>
            <nav className="hidden md:flex space-x-6">
              {['–ì–ª–∞–≤–Ω–∞—è', '–£—Å–ª—É–≥–∏', '–†–µ—Ü–µ–ø—Ç—ã', '–û—Ç–∑—ã–≤—ã', '–û–±–æ –º–Ω–µ', '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', '–ö–æ–Ω—Ç–∞–∫—Ç—ã', '–ë–ª–æ–≥'].map((item) => (
                <button key={item} className="text-white hover:text-turtle-yellow transition-colors font-medium">
                  {item}
                </button>
              ))}
            </nav>
            <Button className="md:hidden comic-button">
              <Icon name="Menu" size={24} />
            </Button>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4">
        {/* Hero Section */}
        <section className="text-center mb-16">
          <div className="grid md:grid-cols-2 gap-8 items-center">
            <div>
              <h1 className="text-6xl font-black text-turtle-dark comic-text-shadow mb-6 animate-comic-bounce">
                –ö–û–í–êBUNGA!
              </h1>
              <h2 className="text-3xl font-bold text-turtle-green mb-4">
                –°—É–ø–µ—Ä–≥–µ—Ä–æ–π—Å–∫–æ–µ –ø–∏—Ç–∞–Ω–∏–µ –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–∏—Ö –Ω–∏–Ω–¥–∑—è!
              </h2>
              <p className="text-xl text-turtle-dark mb-8">
                –û—Ç–∫—Ä–æ–π—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è –≤–º–µ—Å—Ç–µ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–æ–º. 
                –°—Ç–∞–Ω—å—Ç–µ —Å–∏–ª—å–Ω–µ–µ, –±—ã—Å—Ç—Ä–µ–µ –∏ –∑–¥–æ—Ä–æ–≤–µ–µ!
              </p>
              <div className="flex gap-4 justify-center">
                <Button className="comic-button bg-turtle-green hover:bg-turtle-green/90">
                  <Icon name="Calendar" className="mr-2" size={20} />
                  –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
                </Button>
                <Button className="comic-button bg-turtle-orange hover:bg-turtle-orange/90">
                  <Icon name="BookOpen" className="mr-2" size={20} />
                  –ò–∑—É—á–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç—ã
                </Button>
              </div>
            </div>
            <div className="flex justify-center">
              <img 
                src="/img/689c2ce5-eaf5-4096-aab3-302b4dad5289.jpg" 
                alt="Ninja Nutritionist" 
                className="max-w-md w-full comic-border animate-comic-pop"
              />
            </div>
          </div>
        </section>

        {/* Recipe Database Section */}
        <section className="mb-16">
          <div className="text-center mb-8">
            <h2 className="text-4xl font-black text-turtle-dark comic-text-shadow mb-4">
              –ë–ê–ó–ê –°–£–ü–ï–†–ì–ï–†–û–ô–°–ö–ò–• –†–ï–¶–ï–ü–¢–û–í
            </h2>
            <p className="text-xl text-turtle-dark">
              –ù–∞–π–¥–∏—Ç–µ –∏–¥–µ–∞–ª—å–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã —Å —Ç–æ—á–Ω—ã–º —Ä–∞—Å—á–µ—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π –∏ –ë–ñ–£
            </p>
          </div>

          {/* Search and Filters */}
          <div className="mb-8 space-y-4">
            <div className="flex gap-4 items-center justify-center">
              <div className="relative max-w-md w-full">
                <Icon name="Search" className="absolute left-3 top-1/2 transform -translate-y-1/2 text-turtle-dark" size={20} />
                <Input 
                  placeholder="–ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10 comic-border"
                />
              </div>
            </div>
            
            <div className="flex gap-2 justify-center flex-wrap">
              {categories.map((category) => (
                <Button
                  key={category}
                  variant={selectedCategory === category ? "default" : "outline"}
                  onClick={() => setSelectedCategory(category)}
                  className={selectedCategory === category ? "comic-button" : "comic-border bg-white hover:bg-turtle-green/10"}
                >
                  {category}
                </Button>
              ))}
            </div>
          </div>

          {/* Recipe Grid */}
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredRecipes.map((recipe) => (
              <Card key={recipe.id} className="comic-border hover:shadow-lg transition-all duration-300 cursor-pointer hover:scale-105">
                <CardHeader>
                  <div className="flex justify-between items-start">
                    <CardTitle className="text-xl font-bold text-turtle-dark">{recipe.name}</CardTitle>
                    <Badge className="bg-turtle-orange text-white">{recipe.category}</Badge>
                  </div>
                  <CardDescription className="flex items-center gap-2 text-turtle-dark">
                    <Icon name="Clock" size={16} />
                    {recipe.cookTime}
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="grid grid-cols-2 gap-4 mb-4">
                    <div className="text-center p-3 bg-turtle-green/10 rounded-lg">
                      <div className="text-2xl font-bold text-turtle-green">{recipe.calories}</div>
                      <div className="text-sm text-turtle-dark">–∫–∫–∞–ª</div>
                    </div>
                    <div className="text-center p-3 bg-turtle-orange/10 rounded-lg">
                      <div className="text-lg font-bold text-turtle-orange">
                        –ë{recipe.protein} –ñ{recipe.fat} –£{recipe.carbs}
                      </div>
                      <div className="text-sm text-turtle-dark">–≥—Ä–∞–º–º—ã</div>
                    </div>
                  </div>
                  
                  <Button 
                    className="w-full comic-button bg-turtle-yellow text-turtle-dark hover:bg-turtle-yellow/90"
                    onClick={() => setSelectedRecipe(recipe)}
                  >
                    <Icon name="Eye" className="mr-2" size={16} />
                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Ü–µ–ø—Ç
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* Services Preview */}
        <section className="mb-16">
          <h2 className="text-4xl font-black text-turtle-dark comic-text-shadow text-center mb-8">
            –°–£–ü–ï–†–ì–ï–†–û–ô–°–ö–ò–ï –£–°–õ–£–ì–ò
          </h2>
          <div className="grid md:grid-cols-3 gap-6">
            {[
              { icon: "UserCheck", title: "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏", desc: "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è" },
              { icon: "BarChart3", title: "–ê–Ω–∞–ª–∏–∑ –ø–∏—Ç–∞–Ω–∏—è", desc: "–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞—Ü–∏–æ–Ω–∞" },
              { icon: "Trophy", title: "–ü—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ—Ö—É–¥–µ–Ω–∏—è", desc: "–î–æ—Å—Ç–∏–≥–∞–π—Ç–µ —Ü–µ–ª–µ–π –∫–∞–∫ –Ω–∏–Ω–¥–∑—è" }
            ].map((service, index) => (
              <Card key={index} className="comic-border text-center hover:scale-105 transition-transform">
                <CardHeader>
                  <div className="mx-auto w-16 h-16 bg-turtle-green rounded-full flex items-center justify-center mb-4">
                    <Icon name={service.icon as any} size={32} className="text-white" />
                  </div>
                  <CardTitle className="text-turtle-dark">{service.title}</CardTitle>
                  <CardDescription>{service.desc}</CardDescription>
                </CardHeader>
              </Card>
            ))}
          </div>
        </section>

        {/* Call to Action */}
        <section className="text-center bg-turtle-dark comic-border p-8 mb-16">
          <h2 className="text-3xl font-black text-white comic-text-shadow mb-4">
            –ì–û–¢–û–í–´ –°–¢–ê–¢–¨ –°–£–ü–ï–†–ì–ï–†–û–ï–ú –ü–ò–¢–ê–ù–ò–Ø?
          </h2>
          <p className="text-turtle-yellow text-xl mb-6">
            –ó–∞–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –∏ –ø–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è!
          </p>
          <Button className="comic-button bg-turtle-orange hover:bg-turtle-orange/90 text-xl px-8 py-4">
            <Icon name="Zap" className="mr-2" size={24} />
            –ü–û–ï–•–ê–õ–ò!
          </Button>
        </section>
      </div>

      {/* Recipe Modal */}
      {selectedRecipe && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50" onClick={() => setSelectedRecipe(null)}>
          <Card className="comic-border max-w-2xl w-full max-h-[80vh] overflow-y-auto" onClick={(e) => e.stopPropagation()}>
            <CardHeader>
              <div className="flex justify-between items-start">
                <CardTitle className="text-2xl font-bold text-turtle-dark">{selectedRecipe.name}</CardTitle>
                <Button variant="outline" size="sm" onClick={() => setSelectedRecipe(null)}>
                  <Icon name="X" size={16} />
                </Button>
              </div>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-4 gap-4 mb-6">
                <div className="text-center p-3 bg-turtle-green/10 rounded-lg">
                  <div className="text-xl font-bold text-turtle-green">{selectedRecipe.calories}</div>
                  <div className="text-sm">–∫–∫–∞–ª</div>
                </div>
                <div className="text-center p-3 bg-turtle-orange/10 rounded-lg">
                  <div className="text-xl font-bold text-turtle-orange">{selectedRecipe.protein}–≥</div>
                  <div className="text-sm">–±–µ–ª–∫–∏</div>
                </div>
                <div className="text-center p-3 bg-turtle-yellow/10 rounded-lg">
                  <div className="text-xl font-bold text-turtle-yellow">{selectedRecipe.carbs}–≥</div>
                  <div className="text-sm">—É–≥–ª–µ–≤–æ–¥—ã</div>
                </div>
                <div className="text-center p-3 bg-turtle-dark/10 rounded-lg">
                  <div className="text-xl font-bold text-turtle-dark">{selectedRecipe.fat}–≥</div>
                  <div className="text-sm">–∂–∏—Ä—ã</div>
                </div>
              </div>
              
              <div className="space-y-4">
                <div>
                  <h3 className="text-lg font-bold text-turtle-dark mb-2">–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</h3>
                  <ul className="list-disc list-inside space-y-1">
                    {selectedRecipe.ingredients.map((ingredient, index) => (
                      <li key={index} className="text-turtle-dark">{ingredient}</li>
                    ))}
                  </ul>
                </div>
                
                <div>
                  <h3 className="text-lg font-bold text-turtle-dark mb-2">–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:</h3>
                  <ol className="list-decimal list-inside space-y-1">
                    {selectedRecipe.instructions.map((instruction, index) => (
                      <li key={index} className="text-turtle-dark">{instruction}</li>
                    ))}
                  </ol>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      )}

      {/* Footer */}
      <footer className="bg-turtle-dark text-white p-8 mt-16">
        <div className="container mx-auto text-center">
          <div className="text-2xl font-bold mb-4 comic-text-shadow">NINJA NUTRITION</div>
          <p className="text-turtle-yellow mb-4">–í–∞—à –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤–æ–º—É –ø–∏—Ç–∞–Ω–∏—é –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å!</p>
          <div className="flex justify-center space-x-6">
            <Icon name="Instagram" size={24} className="hover:text-turtle-orange cursor-pointer transition-colors" />
            <Icon name="Facebook" size={24} className="hover:text-turtle-orange cursor-pointer transition-colors" />
            <Icon name="MessageCircle" size={24} className="hover:text-turtle-orange cursor-pointer transition-colors" />
          </div>
        </div>
      </footer>
    </div>
  );
}

export default Index;